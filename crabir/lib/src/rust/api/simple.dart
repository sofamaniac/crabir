// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../third_party/reddit_api/client.dart';
import '../third_party/reddit_api/model.dart';
import '../third_party/reddit_api/model/feed.dart';
import '../third_party/reddit_api/model/post.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `setup_the_logger`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Arc < Mutex < FeedStream > >>>
abstract class ArcMutexFeedStream implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FeedWrapper>>
abstract class FeedWrapper implements RustOpaqueInterface {
  ArcMutexFeedStream get stream;

  set stream(ArcMutexFeedStream stream);

  factory FeedWrapper({required Feed feed, required Sort sort}) =>
      RustLib.instance.api.crateApiSimpleFeedWrapperNew(feed: feed, sort: sort);

  Future<Post?> next();
}

class RedditAPI {
  const RedditAPI();

  static Client client() =>
      RustLib.instance.api.crateApiSimpleRedditApiClient();

  @override
  int get hashCode => 0;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RedditAPI && runtimeType == other.runtimeType;
}
